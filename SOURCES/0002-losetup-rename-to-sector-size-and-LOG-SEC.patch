From b5ecef8658f0f1db92cf24abf039632382337dee Mon Sep 17 00:00:00 2001
From: Karel Zak <kzak@redhat.com>
Date: Mon, 2 Oct 2017 11:59:57 +0200
Subject: [PATCH 2/4] losetup: rename to --sector-size and LOG-SEC

Signed-off-by: Karel Zak <kzak@redhat.com>

(cherry picked from commit 76493ceba6600d3a98ad00deaf12edcf305f5ad4)
---
 sys-utils/losetup.8 | 16 +++++++---------
 sys-utils/losetup.c | 12 ++++++------
 2 files changed, 13 insertions(+), 15 deletions(-)

diff --git a/sys-utils/losetup.8 b/sys-utils/losetup.8
index ee704ca81..48e37c198 100644
--- a/sys-utils/losetup.8
+++ b/sys-utils/losetup.8
@@ -7,7 +7,7 @@ Get info:
 .sp
 .in +5
 .B losetup
-.I loopdev
+[\fIloopdev\fP]
 .sp
 .B losetup -l
 .RB [ \-a ]
@@ -31,12 +31,6 @@ Delete all used loop devices:
 .B "losetup \-D"
 .sp
 .in -5
-Print name of first unused loop device:
-.sp
-.in +5
-.B "losetup \-f"
-.sp
-.in -5
 Set up a loop device:
 .sp
 .in +5
@@ -45,6 +39,8 @@ Set up a loop device:
 .IR offset ]
 .RB [ \-\-sizelimit
 .IR size ]
+.RB [ \-\-sector\-size
+.IR size ]
 .in +8
 .RB [ \-Pr ]
 .RB [ \-\-show ]  " \-f" | \fIloopdev\fP
@@ -102,8 +98,10 @@ device
 specify which columns are to be printed for the \fB\-\-list\fP output
 .IP "\fB\-\-sizelimit \fIsize\fP"
 the data end is set to no more than \fIsize\fP bytes after the data start
-.IP "\fB-b, \-\-logical-blocksize \fIsize\fP"
-Set the logical block size of the loop device in bytes (since Linux 4.14).
+.IP "\fB-b, \-\-sector-size \fIsize\fP"
+Set the logical sector size of the loop device in bytes (since Linux 4.14). The
+option may be used when create a new loop device as well as stand-alone command
+to modify sector size of the already existing loop device.
 .IP "\fB\-P, \-\-partscan\fP"
 force kernel to scan partition table on newly created loop device
 .IP "\fB\-r, \-\-read-only\fP"
diff --git a/sys-utils/losetup.c b/sys-utils/losetup.c
index 6ba256c90..ffd4c682f 100644
--- a/sys-utils/losetup.c
+++ b/sys-utils/losetup.c
@@ -47,7 +47,7 @@ enum {
 	COL_PARTSCAN,
 	COL_RO,
 	COL_SIZELIMIT,
-	COL_BLOCKSIZE,
+	COL_LOGSEC,
 };
 
 struct tt *tt;
@@ -70,7 +70,7 @@ static struct colinfo infos[] = {
 	[COL_RO]          = { "RO",           1, TT_FL_RIGHT, N_("read-only device")},
 	[COL_SIZELIMIT]   = { "SIZELIMIT",    5, TT_FL_RIGHT, N_("size limit of the file in bytes")},
 	[COL_MAJMIN]      = { "MAJ:MIN",      3, 0, N_("loop device major:minor number")},
-	[COL_BLOCKSIZE]   = { "BLOCKSIZE",    4, TT_FL_RIGHT, N_("logical block size in bytes")},
+	[COL_LOGSEC]      = { "LOG-SEC",      4, TT_FL_RIGHT, N_("logical sector size in bytes")},
 };
 
 #define NCOLS ARRAY_SIZE(infos)
@@ -286,7 +286,7 @@ static int set_tt_data(struct loopdev_cxt *lc, struct tt_line *ln)
 			tt_line_set_data(ln, i,
 				xstrdup(loopcxt_is_partscan(lc) ? "1" : "0"));
 			break;
-		case COL_BLOCKSIZE:
+		case COL_LOGSEC:
 			if (loopcxt_get_blocksize(lc, &x) == 0)
 				xasprintf(&np, "%jd", x);
 			break;
@@ -364,7 +364,7 @@ static void usage(FILE *out)
 	fputs(_(" -o, --offset <num>            start at offset <num> into file\n"), out);
 	fputs(_(" -O, --output <cols>           specify columns to output for --list\n"), out);
 	fputs(_("     --sizelimit <num>         device limited to <num> bytes of the file\n"), out);
-	fputs(_(" -b  --logical-blocksize <num> set the logical block size to <num>\n"), out);
+	fputs(_(" -b  --sector-size <num>       set the logical sector size to <num>\n"), out);
 	fputs(_(" -P, --partscan                create partitioned loop device\n"), out);
 	fputs(_(" -r, --read-only               setup read-only loop device\n"), out);
 	fputs(_("     --show                    print device name after setup (with -f)\n"), out);
@@ -428,7 +428,7 @@ int main(int argc, char **argv)
 		{ "help", 0, 0, 'h' },
 		{ "associated", 1, 0, 'j' },
 		{ "list", 0, 0, 'l' },
-		{ "logical-blocksize", 1, 0, 'b' },
+		{ "sector-size", 1, 0, 'b' },
 		{ "offset", 1, 0, 'o' },
 		{ "output", 1, 0, 'O' },
 		{ "sizelimit", 1, 0, OPT_SIZELIMIT },
@@ -551,7 +551,7 @@ int main(int argc, char **argv)
 		columns[ncolumns++] = COL_AUTOCLR;
 		columns[ncolumns++] = COL_RO;
 		columns[ncolumns++] = COL_BACK_FILE;
-		columns[ncolumns++] = COL_BLOCKSIZE;
+		columns[ncolumns++] = COL_LOGSEC;
 	}
 
 	if (act == A_FIND_FREE && optind < argc) {
-- 
2.39.2

